---
  - block:
    - name: ensure subscription-manager is present
      yum:
        name: subscription-manager
        state: latest

    - name: add proxy to rhsm
      lineinfile:
        path: /etc/rhsm/rhsm.conf
        line: 'proxy_hostname = {{ proxy_hostname }}'
        regexp: '^proxy_hostname \='
        state: present

    - name: add proxy port to rhsm
      lineinfile:
        path: /etc/rhsm/rhsm.conf
        line: 'proxy_port = {{ proxy_port }}'
        regexp: '^proxy_port \='
        state: present

      - name: subscribe to access.redhat.com, will take a while..
        redhat_subscription:
          state: present
          username: '{{ rhsm_username }}'
          password: '{{ rhsm_password }}'
    
      - name: attach to Satellite Pool
        command: "subscription-manager attach --pool {{ rhsm_pool_id }}"
      tags: subscription

    - name: disable all repositories
      command: "subscription-manager repos --disable '*'"

    - name: enable satellite 6 repositories
      command: "subscription-manager repos --enable rhel-7-server-rpms --enable rhel-server-rhscl-7-rpms --enable rhel-7-server-satellite-6.2-rpms"
    tags: subman

  - block:
    - name: ensure systemid is removed
      file:
        path: /etc/sysconfig/rhn/systemid
        state: absent
   
    - name: ensure up2date is removed
      file:
        path: /etc/sysconfig/rhn/up2date
        state: absent
   
    - name: ensure that no RHN or Satellite 5 packages are installed
      yum:
        name: "{{ item }}"
        state: absent
      with_items:
      - osa-common.noarch
      - osad.noarch
      - rhn-check.noarch
      - rhn-client-tools.noarch
      - rhn-setup.noarch
      - rhncfg.noarch
      - rhncfg-actions.noarch
      - rhnlib.noarch
      - rhncfg-client.noarch
      - rhnsd.x86_64
      - spacewalk-usix.noarch
      - spacewalk-backend-libs.noarch
      - spacewalk-oscap.noarch
      - yum-rhn-plugin.noarch
      - jabberpy.noarch
    tags: unregister_sat5

  - block:
    - name: install ntp
      yum:
        name: chrony
        state: latest

    - name: make sure chrony runs
      service:
        state: started
        name: chronyd


        #
        #  - name: make sure firewalld is enabled and running
        #    service:
        #      name: firewalld
        #      state: started
        #      enabled: true
        #
        #  - name: open firewalld ports
        #    firewalld:
        #      immediate: yes
        #      permanent: yes
        #      state: enabled
        #      port: "{{ item }}"
        #    with_items: "{{ open_ports }}" 

    - name: make sure selinux is in enforcing mode
      selinux:
        policy: targeted
        state: enforcing

  # these tasks verify that DNS is configured properly
  # if any of these tasks fail, the installation won't complete successully
    - name: set hostname
      command: "hostnamectl set-hostname {{ satellite_hostname }}"

    - name: verify localhost resolution
      command: "ping -c1 localhost"
      changed_when: false

    - name: verify hostname resolution 
      command: "ping -c1 {{ ansible_hostname }}"
      changed_when: false

    - name: verify FQDN resolution
      command: "ping -c1 {{ ansible_fqdn }}"
      changed_when: false

    tags: checks

  - name: perform yum update
    yum:
      name: "*"
      state: latest
      update_cache: yes
 
  - name: install satellite packages
    yum:
      name: satellite
      state: latest 
# this task will run the satellite-installer
# it will be run with basic configuration (no capsule services like DNS, DHCP etc) 
# more configuration can be added manually later, see "satellite-installer --help" for all options
#
#  - name: run satellite-installer (this will take a while...)
#    command: "satellite-installer --scenario satellite --foreman-initial-organization '{{ organization }}' --foreman-initial-location '{{ location }}' --foreman-admin-password '{{ admin_password }}'"
#
## debug task to check installer command
##  - name: run satellite-installer (this will take a while...)
##    debug:
##      msg: "satellite-installer --scenario satellite --foreman-initial-organization '{{ organization }}' --foreman-initial-location '{{ location }}' --foreman-admin-password '{{ admin_password }}'"
#
#  - name: notify user that installation is complete
#    debug: 
#      msg: "The installation is now complete. A reboot might be in place if yum updated packages that required reboot. After that it is time to configure your Satellite. This can be done with sat6-configure.yaml"
#  - name: run satellite-installer with proxy
#    command: >
#      satellite-installer \
#      --katello-proxy-url=http://'{{ proxy_hostname }}' 
#      --katello-proxy-port='{{ proxy_port }}' 
#      {% if proxy_username is defined %} --katello-proxy-username='{{ proxy_username }}' {% endif %}
#      {% if proxy_password is defined %} --katello-proxy-password='{{ proxy_password }}' {% endif %}
#    when: proxy_hostname is defined
#
#  - name: set global proxy vars
#    lineinfile:
#      path: /etc/environment
#      line: "https_proxy={{ proxy_hostname }}:{{ proxy_port }}"
#    when: proxy_hostname is defined
#  - name: set global proxy vars
#    lineinfile:
#      path: /etc/environment
#      line: "http_proxy={{ proxy_hostname }}:{{ proxy_port }}"
#    when: proxy_hostname is defined
